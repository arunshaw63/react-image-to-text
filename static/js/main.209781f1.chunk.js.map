{"version":3,"sources":["components/ImageWrapper.js","components/TextWrapper.js","App.js","index.js"],"names":["ImageWrapper","uploadFile","loading","className","type","name","onChange","e","TextWrapper","text","App","useState","imageUrl","setImageUrl","setLoading","setText","convertImageToText","a","Tesseract","recognize","logger","m","console","log","res","data","target","files","formData","FormData","append","config","headers","Axios","post","url","useEffect","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAuBeA,G,MArBM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,WAAWC,EAAc,EAAdA,QACjC,OACE,qBAAKC,UAAU,gBAAf,SAEKD,EACE,4DAGF,+BACC,uBACEE,KAAK,OACLD,UAAU,oBACVE,KAAK,QACLC,SAAU,SAAAC,GAAC,OAAIN,EAAWM,YCTvBC,EAJK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OAAO,0BAAUN,UAAU,eAApB,SAAoCM,KCgB9B,SAASC,IAAO,IAAD,EAECC,qBAFD,mBAErBC,EAFqB,KAEZC,EAFY,OAGDF,oBAAS,GAHR,mBAGrBT,EAHqB,KAGbY,EAHa,OAIJH,mBAAS,MAJL,mBAIrBF,EAJqB,KAIfM,EAJe,KAMtBC,EAAkB,uCAAC,WAAMT,GAAN,eAAAU,EAAA,sEACPC,IAAUC,UACzBP,EACC,MACA,CAAEQ,OAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAJN,OACjBG,EADiB,OAMvBT,EAAQS,EAAIC,KAAKhB,MACjBK,GAAW,GAPY,2CAAD,sDAUlBb,EAAU,uCAAE,WAAMM,GAAN,mBAAAU,EAAA,6DACVH,GAAW,GAEXQ,QAAQC,IAAIhB,EAAEmB,OAAOC,MAAM,KAErBC,EAAW,IAAIC,UACZC,OAAO,QACdvB,EAAEmB,OAAOC,MAAM,IAGXI,EAAS,CACbC,QAAS,CACP,eAAgB,wBAZV,SAgBMC,IAAMC,KAAN,qFAAiGN,EAAUG,GAhBjH,OAgBJP,EAhBI,OAiBVF,QAAQC,IAAIC,GACZX,EAAYW,EAAIC,KAAKA,KAAKU,KAlBhB,4CAAF,sDA4BhB,OANMC,qBAAU,WACO,MAAZxB,GACDI,MAEF,CAACJ,IAGP,sBAAKT,UAAU,MAAf,UACO,qBAAKkC,IAAI,oCAAoClC,UAAU,OAAOmC,IAAI,KAClE,sBAAKnC,UAAU,YAAf,UACDD,GAAW,qBAAKC,UAAU,WACX,MAARM,EACD,cAAC,EAAD,CAAcP,QAASA,EAASD,WAAYA,IAE5C,cAAC,EAAD,CAAaQ,KAAMA,UClEnC8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.209781f1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ImageWrapper = ({ uploadFile,loading }) => {\r\n  return (\r\n    <div className=\"image-wrapper\">\r\n       {\r\n         loading ? (\r\n           <h2>process file...please wait</h2>\r\n         ) :\r\n       \r\n       ( <form>\r\n          <input\r\n            type=\"file\"\r\n            className=\"custom-file-input\"\r\n            name=\"image\"\r\n            onChange={e => uploadFile(e)}\r\n          />\r\n        </form>)\r\n}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageWrapper;","import React from \"react\";\r\n\r\nconst TextWrapper = ({ text }) => {\r\n  return <textarea className=\"text-wrapper\">{text}</textarea>;\r\n};\r\n\r\nexport default TextWrapper;","\nimport Axios from 'axios';\nimport React,{useState,useEffect} from 'react';\nimport Tesseract from 'tesseract.js';\nimport './App.css';\nimport ImageWrapper from './components/ImageWrapper';\nimport TextWrapper from './components/TextWrapper';\n\n\n// const loadData=async()=>{\n//   const res=await Tesseract.recognize(\n//     'https://tesseract.projectnaptha.com/img/eng_bw.png',\n//     'eng',\n//     { logger: m => console.log(m) }\n//   );\n//   console.log(res);\n// }\n// loadData();\n\nexport default function App() {\n\n  const [imageUrl,setImageUrl]=useState();\n  const [loading,setLoading]=useState(false);\n  const [text, setText] = useState(null);\n\n  const convertImageToText=async e =>{\n    const res=await Tesseract.recognize(\n     imageUrl,\n      'eng',\n      { logger: m => console.log(m) }\n    );\n    setText(res.data.text);\n    setLoading(false);\n  }\n\n  const uploadFile= async e=>{\n          setLoading(true);\n\n          console.log(e.target.files[0]);\n        \n          const formData = new FormData();\n          formData.append(\"image\",\n            e.target.files[0]\n          );\n          \n          const config = {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            },\n          }\n        \n          const res=await Axios.post(`https://api.imgbb.com/1/upload?expiration=600&key=c1d253ec927bded219f7079d4bb5fed1`, formData, config);\n          console.log(res);\n          setImageUrl(res.data.data.url);\n        \n        }\n\n        useEffect(()=>{\n          if(imageUrl != null){\n            convertImageToText();\n          }\n        },[imageUrl])\n\n  return (\n    <div className=\"App\">\n           <img src=\"https://i.ibb.co/LpxDvR1/logo.png\" className=\"logo\" alt=\"\" />\n           <div className=\"container\">\n         {loading && <div className=\"loader\"></div>}\n                {text == null ? (\n                <ImageWrapper loading={loading} uploadFile={uploadFile} />\n                ) : (\n                <TextWrapper text={text} />\n                \n                )}\n       </div>\n        </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}